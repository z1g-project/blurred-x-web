{"version":3,"file":"static/js/247.888f45bd.chunk.js","mappings":"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","sources":["webpack://website/./src/Meta.tsx","webpack://website/./src/pages/contact.tsx"],"sourcesContent":["import { useGlobalCloakSettings } from './Layout';\nimport { OBFUSCATE } from './consts';\nimport { getHot } from './routes';\nimport { Helmet } from 'react-helmet-async';\n\n// FAQ will be in english, at least in this repository.\n// Google is capable of translating the FAQ automatically\n\n// We provide metadata for public pages, although they aren't used in default open-source builds of Holy Unblocker.\n// This will allow us to have metadata on our official branch without bloating our branch and enable people to have same levels of SEO.\n\n// https://developers.google.com/search/docs/appearance/structured-data/qapage\n\nexport interface Answer {\n\ttext: string;\n}\n\nexport interface Question {\n\tacceptedAnswer: Answer;\n\tname: string;\n}\n\nexport interface FAQPage {\n\tmainEntity: Question[];\n}\n\n// https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox#structured-data-type-definitions\n\nexport interface Target {\n\turlTemplate: string;\n}\n\nexport interface SearchAction {\n\ttarget: Target;\n\t'query-input': string;\n}\n\nexport interface WebSite {\n\tpotentialAction: SearchAction[];\n\turl: string;\n}\n\nexport interface MetaProps {\n\ttitle?: string;\n\tdescription?: string;\n\tfaq?: Question[];\n\tactions?: SearchAction[];\n}\n\nconst formatFAQ = (faq: FAQPage) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'FAQPage',\n\t\tmainEntity: faq.mainEntity.map((question) => ({\n\t\t\t'@type': 'Question',\n\t\t\tname: question.name,\n\t\t\tacceptedAnswer: {\n\t\t\t\t'@type': 'Answer',\n\t\t\t\ttext: question.acceptedAnswer.text,\n\t\t\t},\n\t\t})),\n\t});\n\nconst formatWebSite = (ws: WebSite) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'WebSite',\n\t\turl: ws.url,\n\t\tpotentialAction: ws.potentialAction.map((action) => ({\n\t\t\t'@type': 'SearchAction',\n\t\t\ttarget: {\n\t\t\t\t'@type': 'EntryPoint',\n\t\t\t\turlTemplate: action.target.urlTemplate,\n\t\t\t},\n\t\t\t'query-input': action['query-input'],\n\t\t})),\n\t});\n\n/**\n * Page metadata.\n */\nconst Meta = ({ title, description, faq, actions }: MetaProps) => {\n\tconst [cloak] = useGlobalCloakSettings();\n\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>\n\t\t\t\t{cloak.title === '' ? title || 'Holy Unblocker' : cloak.title}\n\t\t\t</title>\n\t\t\t{!OBFUSCATE && description && (\n\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t)}\n\t\t\t{!OBFUSCATE && faq && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatFAQ({\n\t\t\t\t\t\tmainEntity: faq,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t{!OBFUSCATE && actions && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatWebSite({\n\t\t\t\t\t\turl: new URL(\n\t\t\t\t\t\t\tgetHot('home').path,\n\t\t\t\t\t\t\tglobal.location.toString()\n\t\t\t\t\t\t).toString(),\n\t\t\t\t\t\tpotentialAction: actions,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t</Helmet>\n\t);\n};\n\nexport default Meta;\n","import type { HolyPage } from '../App';\nimport Meta from '../Meta';\nimport { ObfuscatedThemeA } from '../ThemeElements';\nimport { HU_DISCORD_URL, SUPPORT_EMAIL } from '../consts';\nimport { Obfuscated } from '../obfuscate';\nimport { useTranslation } from 'react-i18next';\n\nconst ContactMeta = () => (\n\t<Meta\n\t\ttitle=\"Contact Us\"\n\t\tdescription=\"If you need help or need to contact Holy Unblocker, you can contact us here.\"\n\t\tfaq={[\n\t\t\t{\n\t\t\t\tname: \"What is Holy Unblocker's GitHub?\",\n\t\t\t\tacceptedAnswer: {\n\t\t\t\t\ttext: 'https://github.com/holy-unblocker',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"What is Holy Unblocker's Discord?\",\n\t\t\t\tacceptedAnswer: {\n\t\t\t\t\ttext: HU_DISCORD_URL,\n\t\t\t\t},\n\t\t\t},\n\t\t]}\n\t/>\n);\n\nconst Contact: HolyPage = () => {\n\tconst { t } = useTranslation('link');\n\n\treturn (\n\t\t<>\n\t\t\t<ContactMeta />\n\t\t\t<main>\n\t\t\t\t<h1>{t('contact')}</h1>\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>GitHub:</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ObfuscatedThemeA\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/holy-unblocker\"\n\t\t\t\t\t\t\t\t\ttitle=\"Git repository\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Obfuscated>https://github.com/holy-unblocker</Obfuscated>\n\t\t\t\t\t\t\t\t</ObfuscatedThemeA>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Email:</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ObfuscatedThemeA\n\t\t\t\t\t\t\t\t\thref={'mailto:' + SUPPORT_EMAIL}\n\t\t\t\t\t\t\t\t\ttitle=\"Email address\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Obfuscated>{SUPPORT_EMAIL}</Obfuscated>\n\t\t\t\t\t\t\t\t</ObfuscatedThemeA>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>Discord:</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<ObfuscatedThemeA href={HU_DISCORD_URL} title=\"Server invite\">\n\t\t\t\t\t\t\t\t\t<Obfuscated>{HU_DISCORD_URL}</Obfuscated>\n\t\t\t\t\t\t\t\t</ObfuscatedThemeA>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nexport default Contact;\n"],"names":["formatFAQ","JSON","stringify","mainEntity","faq","map","name","question","acceptedAnswer","text","formatWebSite","url","ws","potentialAction","target","urlTemplate","action","Meta","title","description","actions","cloak","useGlobalCloakSettings","Helmet","OBFUSCATE","meta","content","script","type","URL","getHot","path","global","location","toString","ContactMeta","HU_DISCORD_URL","Contact","t","useTranslation","main","h1","table","tbody","tr","td","ObfuscatedThemeA","href","Obfuscated","SUPPORT_EMAIL"],"sourceRoot":""}