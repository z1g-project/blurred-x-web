{"version":3,"file":"static/js/460.eac44570.chunk.js","mappings":"gMA+BA,IAAMA,EAAkB,CAAC,CAAEC,aAAAA,CAAY,CAAE,GAAK,CAC7C,GAAM,CAAEC,EAAAA,CAAC,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,EAAe,UACvBC,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IACXC,EAAeC,CAAAA,EAAAA,EAAAA,MAAAA,EAAyB,IAAI,EA2DlD,MAzDAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACf,CAAC,EAAD,KAAC,WAAkB,KAGdC,EAFJ,GAAI,EAAcC,OAAO,EAAKJ,EAAaI,OAAO,CAIlD,GAAI,CACH,GAAI,CAACC,EAAAA,EAAcA,CAElB,MADAF,EAAaG,EAAAA,EAAAA,CAAAA,CAAM,CAAC,wBACd,MAAUH,EAAY,CAC5B,GAEG,CAACI,UAAUC,aAAa,CAE3B,MADAL,EAAaG,EAAAA,EAAAA,CAAAA,CAAM,CAAC,0BACd,MAAUH,EAAY,CAC5B,EAEYG,EAAAA,EAAAA,CAAAA,CAAM,CAAC,wBACpB,MAAMN,EAAaI,OAAO,CAACK,OAAO,CAClCN,EAAaO,KAAAA,EAEb,IAAMC,EAAS,CAEdC,YAAaC,EAAAA,EAAQA,CACrBC,UAAW,SACZ,CAMCH,CAAAA,EAAOI,QAAQ,CAAGC,UAAUC,SAAS,CACrCN,EAAOO,KAAK,CAAGF,UAAUG,SAAS,CAClC,IAEKC,EAAO,IAAIJ,UAAUL,GAE3BR,EAAaG,EAAAA,EAAAA,CAAAA,CAAM,CAAC,8BACpB,MAAMc,EAAKC,KAAK,CAChBlB,EAAaO,KAAAA,EAEbP,EAAaG,EAAAA,EAAAA,CAAAA,CAAM,CAAC,2BAA4B,CAAEgB,KAAM,MAAO,EAC/D,EACC,IAAMC,EAAO,MAAMC,MAAMX,EAAAA,EAAQA,EACjC,GAAI,CAACU,EAAKE,EAAE,CACX,MAAM,MAAMF,EAAKG,IAAI,EAAG,CAG1BvB,EAAaO,KAAAA,EAEbiB,EAAAA,CAAMA,CAAC7B,QAAQ,CAAC8B,OAAO,CAACR,EAAKS,IAAI,CAACC,CAAAA,EAAAA,EAAAA,EAAAA,EAAehC,IAClD,CAAE,MAAOiC,EAAK,CACbpC,EAAaS,OAAO,CAAC4B,MAAM,CAACD,EAAK5B,EAAY,QAC9C,CAjDA,IAmDF,EAAG,CAACR,EAAcK,EAAcF,EAAS,EAGxC,WAACmC,OAAAA,CAAAA,SAAAA,CACA,UAACC,EAAAA,EAAMA,CAAAA,CACNC,IAAKC,yBACLC,IAAKrC,CAAY,GAEjBJ,EAAE,UAAW,CAAE0B,KAAM,OAAQ,KAGjC,CAEA,WAAe5B,C","sources":["webpack://website/./src/pages/compat/stomp.tsx"],"sourcesContent":["import type { HolyPage } from '../../App';\nimport type { ScriptRef } from '../../CompatLayout';\nimport { getDestination } from '../../CompatLayout';\nimport { Script } from '../../CompatLayout';\nimport { BARE_API, SERVICEWORKERS } from '../../consts';\nimport i18n from '../../i18n';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\n\ninterface StompBootConfig {\n\tbare_server: string;\n\tdirectory: string;\n\tloglevel: number;\n\tcodec: number;\n}\n\ndeclare class StompBoot {\n\tstatic readonly CODEC_PLAIN: number;\n\tstatic readonly CODEC_XOR: number;\n\tstatic readonly LOG_DEBUG: number;\n\tstatic readonly LOG_ERROR: number;\n\tstatic readonly LOG_INFO: number;\n\tstatic readonly LOG_SILENT: number;\n\tstatic readonly LOG_TRACE: number;\n\tstatic readonly LOG_WARN: number;\n\tconstructor(config: StompBootConfig);\n\thtml(url: string): string;\n\tready: Promise<void>;\n}\n\nconst Stomp: HolyPage = ({ compatLayout }) => {\n\tconst { t } = useTranslation('compat');\n\tconst location = useLocation();\n\tconst bootstrapper = useRef<ScriptRef | null>(null);\n\n\tuseEffect(() => {\n\t\t(async function () {\n\t\t\tif (!compatLayout.current || !bootstrapper.current) return;\n\n\t\t\tlet errorCause: string | undefined;\n\n\t\t\ttry {\n\t\t\t\tif (!SERVICEWORKERS) {\n\t\t\t\t\terrorCause = i18n.t('compat:error.swHTTPS');\n\t\t\t\t\tthrow new Error(errorCause);\n\t\t\t\t}\n\n\t\t\t\tif (!navigator.serviceWorker) {\n\t\t\t\t\terrorCause = i18n.t('compat:error.swSupport');\n\t\t\t\t\tthrow new Error(errorCause);\n\t\t\t\t}\n\n\t\t\t\terrorCause = i18n.t('compat:error.generic');\n\t\t\t\tawait bootstrapper.current.promise;\n\t\t\t\terrorCause = undefined;\n\n\t\t\t\tconst config = {\n\t\t\t\t\t// eslint-disable-next-line camelcase\n\t\t\t\t\tbare_server: BARE_API,\n\t\t\t\t\tdirectory: '/stomp/',\n\t\t\t\t} as Partial<StompBootConfig>;\n\n\t\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\t\tconfig.loglevel = StompBoot.LOG_TRACE;\n\t\t\t\t\tconfig.codec = StompBoot.CODEC_PLAIN;\n\t\t\t\t} else {\n\t\t\t\t\tconfig.loglevel = StompBoot.LOG_ERROR;\n\t\t\t\t\tconfig.codec = StompBoot.CODEC_XOR;\n\t\t\t\t}\n\n\t\t\t\tconst boot = new StompBoot(config as StompBootConfig);\n\n\t\t\t\terrorCause = i18n.t('compat:error.registeringSW');\n\t\t\t\tawait boot.ready;\n\t\t\t\terrorCause = undefined;\n\n\t\t\t\terrorCause = i18n.t('compat:error.unreachable', { what: 'Bare' });\n\t\t\t\t{\n\t\t\t\t\tconst bare = await fetch(BARE_API);\n\t\t\t\t\tif (!bare.ok) {\n\t\t\t\t\t\tthrow await bare.json();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\terrorCause = undefined;\n\n\t\t\t\tglobal.location.replace(boot.html(getDestination(location)));\n\t\t\t} catch (err) {\n\t\t\t\tcompatLayout.current.report(err, errorCause, 'Stomp');\n\t\t\t}\n\t\t})();\n\t}, [compatLayout, bootstrapper, location]);\n\n\treturn (\n\t\t<main>\n\t\t\t<Script\n\t\t\t\tsrc={process.env.PUBLIC_PATH + '/stomp/bootstrapper.js'}\n\t\t\t\tref={bootstrapper}\n\t\t\t/>\n\t\t\t{t('loading', { what: 'Stomp' })}\n\t\t</main>\n\t);\n};\n\nexport default Stomp;\n"],"names":["Stomp","compatLayout","t","useTranslation","location","useLocation","bootstrapper","useRef","useEffect","errorCause","current","SERVICEWORKERS","i18n","navigator","serviceWorker","promise","undefined","config","bare_server","BARE_API","directory","loglevel","StompBoot","LOG_ERROR","codec","CODEC_XOR","boot","ready","what","bare","fetch","ok","json","global","replace","html","getDestination","err","report","main","Script","src","process","ref"],"sourceRoot":""}