{"version":3,"file":"static/js/493.eee31125.chunk.js","mappings":"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","sources":["webpack://website/./src/styles/TheatreCategory.module.scss","webpack://website/./src/DatabaseAPI.ts","webpack://website/./src/Meta.tsx","webpack://website/./src/TheatreCommon.tsx","webpack://website/./src/isAbortError.ts","webpack://website/./src/pages/theatre/favorites.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"TheatreCategory_main__CzudK\",\"pages\":\"TheatreCategory_pages__UNude\",\"useless\":\"TheatreCategory_useless__p9ElA\",\"button\":\"TheatreCategory_button__238tS\",\"disabled\":\"TheatreCategory_disabled__tKcSI\",\"sort\":\"TheatreCategory_sort__pGCep\",\"name\":\"TheatreCategory_name__Xg+vq\",\"seeAll\":\"TheatreCategory_seeAll__gesCj\",\"items\":\"TheatreCategory_items__xWOmJ\",\"item\":\"TheatreCategory_item__-1Np3\",\"thumbnail\":\"TheatreCategory_thumbnail__LhS66\",\"shimmerCard\":\"TheatreCategory_shimmerCard__aPdqs\",\"loading\":\"TheatreCategory_loading__IwKQD\",\"flex\":\"TheatreCategory_flex__9Ly9e\",\"expand\":\"TheatreCategory_expand__zjVTi\"};","export interface DatabaseError extends Error {\n\tstatusCode: number;\n\ttype?: string;\n}\n\nexport const isDatabaseError = (error: unknown): error is DatabaseError =>\n\ttypeof error === 'object' &&\n\terror !== null &&\n\terror instanceof Error &&\n\t'statusCode' in error;\n\nexport default class DatabaseAPI {\n\tprivate server: string;\n\tprivate signal?: AbortSignal;\n\tconstructor(server: string, signal?: AbortSignal) {\n\t\tthis.server = server;\n\t\tthis.signal = signal;\n\t}\n\tprotected sortParams(\n\t\tparams: Record<string, unknown>\n\t): Record<string, string> {\n\t\tconst result: Record<string, string> = {};\n\n\t\tfor (const param in params) {\n\t\t\tconst value = params[param];\n\n\t\t\tif (typeof value === 'string' || typeof value === 'number')\n\t\t\t\tresult[param] = value.toString();\n\t\t}\n\n\t\treturn result;\n\t}\n\tasync fetch<JSONData>(url: string, init: RequestInit = {}) {\n\t\tconst outgoing = await fetch(new URL(url, this.server), {\n\t\t\t...init,\n\t\t\tsignal: this.signal,\n\t\t});\n\n\t\tconst json = await outgoing.json();\n\n\t\tif (!outgoing.ok) {\n\t\t\tconst error: Partial<DatabaseError> = new Error(json.message);\n\t\t\terror.statusCode = json.statusCode;\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn json as JSONData;\n\t}\n}\n","import { useGlobalCloakSettings } from './Layout';\nimport { OBFUSCATE } from './consts';\nimport { getHot } from './routes';\nimport { Helmet } from 'react-helmet-async';\n\n// FAQ will be in english, at least in this repository.\n// Google is capable of translating the FAQ automatically\n\n// We provide metadata for public pages, although they aren't used in default open-source builds of Holy Unblocker.\n// This will allow us to have metadata on our official branch without bloating our branch and enable people to have same levels of SEO.\n\n// https://developers.google.com/search/docs/appearance/structured-data/qapage\n\nexport interface Answer {\n\ttext: string;\n}\n\nexport interface Question {\n\tacceptedAnswer: Answer;\n\tname: string;\n}\n\nexport interface FAQPage {\n\tmainEntity: Question[];\n}\n\n// https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox#structured-data-type-definitions\n\nexport interface Target {\n\turlTemplate: string;\n}\n\nexport interface SearchAction {\n\ttarget: Target;\n\t'query-input': string;\n}\n\nexport interface WebSite {\n\tpotentialAction: SearchAction[];\n\turl: string;\n}\n\nexport interface MetaProps {\n\ttitle?: string;\n\tdescription?: string;\n\tfaq?: Question[];\n\tactions?: SearchAction[];\n}\n\nconst formatFAQ = (faq: FAQPage) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'FAQPage',\n\t\tmainEntity: faq.mainEntity.map((question) => ({\n\t\t\t'@type': 'Question',\n\t\t\tname: question.name,\n\t\t\tacceptedAnswer: {\n\t\t\t\t'@type': 'Answer',\n\t\t\t\ttext: question.acceptedAnswer.text,\n\t\t\t},\n\t\t})),\n\t});\n\nconst formatWebSite = (ws: WebSite) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'WebSite',\n\t\turl: ws.url,\n\t\tpotentialAction: ws.potentialAction.map((action) => ({\n\t\t\t'@type': 'SearchAction',\n\t\t\ttarget: {\n\t\t\t\t'@type': 'EntryPoint',\n\t\t\t\turlTemplate: action.target.urlTemplate,\n\t\t\t},\n\t\t\t'query-input': action['query-input'],\n\t\t})),\n\t});\n\n/**\n * Page metadata.\n */\nconst Meta = ({ title, description, faq, actions }: MetaProps) => {\n\tconst [cloak] = useGlobalCloakSettings();\n\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>\n\t\t\t\t{cloak.title === '' ? title || 'Holy Unblocker' : cloak.title}\n\t\t\t</title>\n\t\t\t{!OBFUSCATE && description && (\n\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t)}\n\t\t\t{!OBFUSCATE && faq && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatFAQ({\n\t\t\t\t\t\tmainEntity: faq,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t{!OBFUSCATE && actions && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatWebSite({\n\t\t\t\t\t\turl: new URL(\n\t\t\t\t\t\t\tgetHot('home').path,\n\t\t\t\t\t\t\tglobal.location.toString()\n\t\t\t\t\t\t).toString(),\n\t\t\t\t\t\tpotentialAction: actions,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t</Helmet>\n\t);\n};\n\nexport default Meta;\n","import DatabaseAPI from './DatabaseAPI';\nimport { THEATRE_CDN } from './consts';\nimport { Obfuscated } from './obfuscate';\nimport { getHot } from './routes';\nimport styles from './styles/TheatreCategory.module.scss';\nimport clsx from 'clsx';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * one of the above types or a letter/key such as A,B,TAB,SPACE,SHIFT\n */\nexport type KeyLike =\n\t| 'mouseleft'\n\t| 'mouseright'\n\t| 'scrollup'\n\t| 'scrolldown'\n\t| 'wasd'\n\t| 'arrows'\n\t| string;\n\nexport interface Control {\n\tkeys: KeyLike[];\n\tlabel: string;\n}\n\nexport interface TheatreEntry {\n\ttype:\n\t\t| 'emulator.nes'\n\t\t| 'emulator.gba'\n\t\t| 'emulator.n64'\n\t\t| 'emulator.genesis'\n\t\t| 'flash'\n\t\t| 'embed'\n\t\t| 'proxy'\n\t\t| string;\n\tcontrols: Control[];\n\tcategory: string[];\n\tid: string;\n\tname: string;\n\tplays: number;\n\tsrc: string;\n}\n\nexport interface LoadingTheatreEntry {\n\tid: string;\n\tloading: true;\n\tcategory: string[];\n}\n\nexport interface CategoryData {\n\ttotal: number;\n\tentries: TheatreEntry[];\n}\n\nexport interface LoadingCategoryData {\n\ttotal: number;\n\tentries: (TheatreEntry | LoadingTheatreEntry)[];\n\tloading: true;\n}\n\nexport interface TheatreEntry {\n\ttype:\n\t\t| 'emulator.nes'\n\t\t| 'emulator.gba'\n\t\t| 'emulator.n64'\n\t\t| 'emulator.genesis'\n\t\t| 'flash'\n\t\t| 'embed'\n\t\t| 'proxy'\n\t\t| string;\n\tcontrols: Control[];\n\tcategory: string[];\n\tid: string;\n\tname: string;\n\tplays: number;\n\tsrc: string;\n}\nexport function isLoading(\n\tdata: CategoryData | LoadingCategoryData\n): data is LoadingCategoryData;\n\nexport function isLoading(\n\tdata: TheatreEntry | LoadingTheatreEntry\n): data is LoadingTheatreEntry;\n\nexport function isLoading(\n\tdata: TheatreEntry | LoadingTheatreEntry | CategoryData | LoadingCategoryData\n): data is LoadingTheatreEntry | LoadingCategoryData {\n\treturn 'loading' in data && data.loading === true;\n}\n\nexport class TheatreAPI extends DatabaseAPI {\n\tasync show(id: String) {\n\t\treturn await this.fetch<TheatreEntry>(`./theatre/${id}/`);\n\t}\n\tasync plays(id: string) {\n\t\treturn await this.fetch<TheatreEntry>(`./theatre/${id}/plays`, {\n\t\t\tmethod: 'PUT',\n\t\t});\n\t}\n\tasync category(params: {\n\t\tleastGreatest?: boolean;\n\t\tsort?: string;\n\t\tcategory?: string;\n\t\tsearch?: string;\n\t\toffset?: number;\n\t\tlimit?: number;\n\t\tlimitPerCategory?: number;\n\t}) {\n\t\treturn await this.fetch<CategoryData>(\n\t\t\t'./theatre/?' + new URLSearchParams(this.sortParams(params))\n\t\t);\n\t}\n}\n\nexport function Item({ id, name }: { id: string; name: string }) {\n\tconst [loaded, setLoaded] = useState(false);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName={styles.item}\n\t\t\tto={`${getHot('theatre player').path}?id=${id}`}\n\t\t\ttitle={name}\n\t\t>\n\t\t\t<div className={styles.thumbnail} data-loaded={Number(loaded)}>\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\tonLoad={() => setLoaded(true)}\n\t\t\t\t\tsrc={new URL(`./thumbnails/${id}.webp`, THEATRE_CDN).toString()}\n\t\t\t\t></img>\n\t\t\t</div>\n\t\t\t<div className={styles.name}>\n\t\t\t\t<Obfuscated ellipsis>{name}</Obfuscated>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport function LoadingItem() {\n\treturn (\n\t\t<div className={clsx(styles.item, styles.loading)}>\n\t\t\t<div className={styles.thumbnail} />\n\t\t\t<div className={styles.name} />\n\t\t</div>\n\t);\n}\n\nexport function ItemList({\n\titems,\n\t...attributes\n}: JSX.IntrinsicElements['div'] & {\n\titems: (TheatreEntry | LoadingTheatreEntry)[];\n}) {\n\tconst children = [];\n\n\tfor (const item of items) {\n\t\tif (isLoading(item)) {\n\t\t\tchildren.push(<LoadingItem key={item.id} />);\n\t\t} else {\n\t\t\tchildren.push(<Item key={item.id} id={item.id} name={item.name} />);\n\t\t}\n\t}\n\n\treturn <div {...attributes}>{children}</div>;\n}\n","export const isError = (err: unknown): err is Error =>\n\ttypeof err === 'object' && err !== null && err instanceof Error;\n\nexport const isFailedToFetch = (err: unknown): err is Error =>\n\tisError(err) && err.message === 'Failed to fetch';\n\nconst isAbortError = (err: unknown): err is Error =>\n\tisError(err) && err.name === 'AbortError';\n\nexport default isAbortError;\n","import type { HolyPage } from '../../App';\nimport { useGlobalSettings } from '../../Layout';\nimport Meta from '../../Meta';\nimport type { LoadingTheatreEntry, TheatreEntry } from '../../TheatreCommon';\nimport { ItemList, TheatreAPI } from '../../TheatreCommon';\nimport { DB_API } from '../../consts';\nimport { isFailedToFetch } from '../../isAbortError';\nimport { Obfuscated } from '../../obfuscate';\nimport styles from '../../styles/TheatreCategory.module.scss';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst FavoritesMeta = () => <Meta title=\"Favorites\" />;\n\nconst Favorites: HolyPage = ({ layout }) => {\n\tconst [settings, setSettings] = useGlobalSettings();\n\tconst { t } = useTranslation('theatre');\n\n\tconst [data, setData] = useState<(TheatreEntry | LoadingTheatreEntry)[]>(() =>\n\t\tsettings.favorites.map((id) => ({\n\t\t\tloading: true,\n\t\t\tid,\n\t\t\tcategory: [],\n\t\t}))\n\t);\n\n\tuseEffect(() => {\n\t\tconst abort = new AbortController();\n\n\t\t(async function () {\n\t\t\tconst api = new TheatreAPI(DB_API, abort.signal);\n\t\t\tconst data = [];\n\n\t\t\tfor (const id of settings.favorites) {\n\t\t\t\ttry {\n\t\t\t\t\tdata.push(await api.show(id));\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// cancelled? page unload?\n\t\t\t\t\tif (!isFailedToFetch(err)) {\n\t\t\t\t\t\tconsole.warn('Unable to fetch entry:', id, err);\n\t\t\t\t\t\tsettings.favorites.splice(settings.favorites.indexOf(id), 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update settings\n\t\t\tsetSettings({\n\t\t\t\t...settings,\n\t\t\t});\n\n\t\t\tsetData(data);\n\t\t})();\n\n\t\treturn () => abort.abort();\n\t}, [layout, setSettings, settings]);\n\n\tif (settings.favorites.length === 0)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<FavoritesMeta />\n\t\t\t\t<main className=\"error\">\n\t\t\t\t\t<p>{t('noFavorites')}</p>\n\t\t\t\t</main>\n\t\t\t</>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FavoritesMeta />{' '}\n\t\t\t<main className={styles.main}>\n\t\t\t\t<section>\n\t\t\t\t\t<div className={styles.name}>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<Obfuscated>Favorites</Obfuscated>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.items}>\n\t\t\t\t\t\t<ItemList items={data} />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nexport default Favorites;\n"],"names":["isDatabaseError","error","Error","DatabaseAPI","params","result","param","value","toString","url","init","outgoing","fetch","URL","server","signal","json","ok","message","statusCode","constructor","formatFAQ","JSON","stringify","mainEntity","faq","map","name","question","acceptedAnswer","text","formatWebSite","ws","potentialAction","target","urlTemplate","action","Meta","title","description","actions","cloak","useGlobalCloakSettings","Helmet","OBFUSCATE","meta","content","script","type","getHot","path","global","location","isLoading","data","loading","TheatreAPI","id","method","URLSearchParams","sortParams","Item","loaded","setLoaded","useState","Link","className","styles","to","div","data-loaded","Number","img","alt","onLoad","src","THEATRE_CDN","Obfuscated","ellipsis","LoadingItem","clsx","ItemList","items","attributes","children","item","push","isError","err","isFailedToFetch","isAbortError","FavoritesMeta","Favorites","layout","settings","setSettings","useGlobalSettings","t","useTranslation","setData","favorites","category","useEffect","abort","AbortController","api","DB_API","show","console","warn","splice","indexOf","length","main","p","section","h1"],"sourceRoot":""}