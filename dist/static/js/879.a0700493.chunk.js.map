{"version":3,"file":"static/js/879.a0700493.chunk.js","mappings":"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","sources":["webpack://website/./src/Meta.tsx","webpack://website/./src/engines.ts","webpack://website/./src/pages/settings/proxy.tsx"],"sourcesContent":["import { useGlobalCloakSettings } from './Layout';\nimport { OBFUSCATE } from './consts';\nimport { getHot } from './routes';\nimport { Helmet } from 'react-helmet-async';\n\n// FAQ will be in english, at least in this repository.\n// Google is capable of translating the FAQ automatically\n\n// We provide metadata for public pages, although they aren't used in default open-source builds of Holy Unblocker.\n// This will allow us to have metadata on our official branch without bloating our branch and enable people to have same levels of SEO.\n\n// https://developers.google.com/search/docs/appearance/structured-data/qapage\n\nexport interface Answer {\n\ttext: string;\n}\n\nexport interface Question {\n\tacceptedAnswer: Answer;\n\tname: string;\n}\n\nexport interface FAQPage {\n\tmainEntity: Question[];\n}\n\n// https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox#structured-data-type-definitions\n\nexport interface Target {\n\turlTemplate: string;\n}\n\nexport interface SearchAction {\n\ttarget: Target;\n\t'query-input': string;\n}\n\nexport interface WebSite {\n\tpotentialAction: SearchAction[];\n\turl: string;\n}\n\nexport interface MetaProps {\n\ttitle?: string;\n\tdescription?: string;\n\tfaq?: Question[];\n\tactions?: SearchAction[];\n}\n\nconst formatFAQ = (faq: FAQPage) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'FAQPage',\n\t\tmainEntity: faq.mainEntity.map((question) => ({\n\t\t\t'@type': 'Question',\n\t\t\tname: question.name,\n\t\t\tacceptedAnswer: {\n\t\t\t\t'@type': 'Answer',\n\t\t\t\ttext: question.acceptedAnswer.text,\n\t\t\t},\n\t\t})),\n\t});\n\nconst formatWebSite = (ws: WebSite) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'WebSite',\n\t\turl: ws.url,\n\t\tpotentialAction: ws.potentialAction.map((action) => ({\n\t\t\t'@type': 'SearchAction',\n\t\t\ttarget: {\n\t\t\t\t'@type': 'EntryPoint',\n\t\t\t\turlTemplate: action.target.urlTemplate,\n\t\t\t},\n\t\t\t'query-input': action['query-input'],\n\t\t})),\n\t});\n\n/**\n * Page metadata.\n */\nconst Meta = ({ title, description, faq, actions }: MetaProps) => {\n\tconst [cloak] = useGlobalCloakSettings();\n\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>\n\t\t\t\t{cloak.title === '' ? title || 'Holy Unblocker' : cloak.title}\n\t\t\t</title>\n\t\t\t{!OBFUSCATE && description && (\n\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t)}\n\t\t\t{!OBFUSCATE && faq && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatFAQ({\n\t\t\t\t\t\tmainEntity: faq,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t{!OBFUSCATE && actions && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatWebSite({\n\t\t\t\t\t\turl: new URL(\n\t\t\t\t\t\t\tgetHot('home').path,\n\t\t\t\t\t\t\tglobal.location.toString()\n\t\t\t\t\t\t).toString(),\n\t\t\t\t\t\tpotentialAction: actions,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t</Helmet>\n\t);\n};\n\nexport default Meta;\n","export interface Engine {\n\tname: string;\n\tformat: string;\n}\n\nconst engines: Engine[] = [\n\t{\n\t\tname: 'Google',\n\t\tformat: 'https://www.google.com/search?q=%s',\n\t},\n\t{\n\t\tname: 'DuckDuckGo',\n\t\tformat: 'https://duckduckgo.com/?q=%s',\n\t},\n\t{\n\t\tname: 'Bing',\n\t\tformat: 'https://www.bing.com/search?q=%s',\n\t},\n\t{\n\t\tname: 'Wikipedia',\n\t\tformat: 'https://en.wikipedia.org/wiki/Special:Search?search=%s',\n\t},\n\t{\n\t\tname: 'Reddit',\n\t\tformat: 'https://www.reddit.com/search/?q=%s',\n\t},\n\t{\n\t\tname: 'Hacker News',\n\t\tformat: 'https://hn.algolia.com/?query=%s',\n\t},\n];\n\nexport default engines;\n","import type { HolyPage } from '../../App';\nimport { useGlobalSettings } from '../../Layout';\nimport Meta from '../../Meta';\nimport { ThemeSelect } from '../../ThemeElements';\nimport engines from '../../engines';\nimport { Obfuscated } from '../../obfuscate';\nimport styles from '../../styles/Settings.module.scss';\nimport { useTranslation } from 'react-i18next';\n\nconst SearchMeta = () => <Meta title=\"Proxy Settings\" />;\n\nconst Search: HolyPage = () => {\n\tconst { t } = useTranslation(['settings', 'link']);\n\tconst [settings, setSettings] = useGlobalSettings();\n\n\treturn (\n\t\t<>\n\t\t\t<SearchMeta />\n\t\t\t<section>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Obfuscated>{t('link:proxy')}</Obfuscated>:\n\t\t\t\t\t</p>\n\t\t\t\t\t<ThemeSelect\n\t\t\t\t\t\tclassName={styles.ThemeSelect}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tsetSettings({\n\t\t\t\t\t\t\t\t...settings,\n\t\t\t\t\t\t\t\tproxy: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultValue={settings.proxy}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"automatic\">{t('settings:automaticProxy')}</option>\n\t\t\t\t\t\t<option value=\"ultraviolet\">Ultraviolet</option>\n\t\t\t\t\t\t<option value=\"rammerhead\">Rammerhead</option>\n\t\t\t\t\t\t<option value=\"stomp\">Stomp</option>\n\t\t\t\t\t</ThemeSelect>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Obfuscated>{t('settings:proxy.mode')}</Obfuscated>:\n\t\t\t\t\t</p>\n\t\t\t\t\t<ThemeSelect\n\t\t\t\t\t\tclassName={styles.ThemeSelect}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tsetSettings({\n\t\t\t\t\t\t\t\t...settings,\n\t\t\t\t\t\t\t\tproxyMode: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultValue={settings.proxyMode}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"embedded\">\n\t\t\t\t\t\t\t{t('settings:proxy.setting.embedded')}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"redirect\">\n\t\t\t\t\t\t\t{t('settings:proxy.setting.redirect')}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t<option value=\"about:blank\">\n\t\t\t\t\t\t\t{t('settings:proxy.setting.ab')}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</ThemeSelect>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Obfuscated>{t('settings:searchEngine')}</Obfuscated>:\n\t\t\t\t\t</p>\n\t\t\t\t\t<ThemeSelect\n\t\t\t\t\t\tclassName={styles.ThemeSelect}\n\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\tsetSettings({\n\t\t\t\t\t\t\t\t...settings,\n\t\t\t\t\t\t\t\tsearch: event.target.value,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefaultValue={settings.search}\n\t\t\t\t\t>\n\t\t\t\t\t\t{engines.map(({ name, format }) => (\n\t\t\t\t\t\t\t<option key={format} value={format}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ThemeSelect>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</>\n\t);\n};\n\nexport default Search;\n"],"names":["formatFAQ","JSON","stringify","mainEntity","faq","map","name","question","acceptedAnswer","text","formatWebSite","url","ws","potentialAction","target","urlTemplate","action","Meta","title","description","actions","cloak","useGlobalCloakSettings","Helmet","OBFUSCATE","meta","content","script","type","URL","getHot","path","global","location","toString","format","SearchMeta","Search","t","useTranslation","settings","setSettings","useGlobalSettings","section","div","p","Obfuscated","ThemeSelect","className","styles","onChange","proxy","event","value","defaultValue","option","proxyMode","search","engines"],"sourceRoot":""}