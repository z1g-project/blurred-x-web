{"version":3,"file":"static/js/993.758962b3.chunk.js","mappings":"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","sources":["webpack://website/./src/Meta.tsx","webpack://website/./node_modules/@tomphttp/bare-client/src/snapshot.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/Client.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/encodeProtocol.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/md5.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/BareClient.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/V2.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/splitHeaderUtil.ts","webpack://website/./node_modules/@tomphttp/bare-client/src/V1.ts"],"sourcesContent":["import { useGlobalCloakSettings } from './Layout';\nimport { OBFUSCATE } from './consts';\nimport { getHot } from './routes';\nimport { Helmet } from 'react-helmet-async';\n\n// FAQ will be in english, at least in this repository.\n// Google is capable of translating the FAQ automatically\n\n// We provide metadata for public pages, although they aren't used in default open-source builds of Blurred X.\n// This will allow us to have metadata on our official branch without bloating our branch and enable people to have same levels of SEO.\n\n// https://developers.google.com/search/docs/appearance/structured-data/qapage\n\nexport interface Answer {\n\ttext: string;\n}\n\nexport interface Question {\n\tacceptedAnswer: Answer;\n\tname: string;\n}\n\nexport interface FAQPage {\n\tmainEntity: Question[];\n}\n\n// https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox#structured-data-type-definitions\n\nexport interface Target {\n\turlTemplate: string;\n}\n\nexport interface SearchAction {\n\ttarget: Target;\n\t'query-input': string;\n}\n\nexport interface WebSite {\n\tpotentialAction: SearchAction[];\n\turl: string;\n}\n\nexport interface MetaProps {\n\ttitle?: string;\n\tdescription?: string;\n\tfaq?: Question[];\n\tactions?: SearchAction[];\n}\n\nconst formatFAQ = (faq: FAQPage) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'FAQPage',\n\t\tmainEntity: faq.mainEntity.map((question) => ({\n\t\t\t'@type': 'Question',\n\t\t\tname: question.name,\n\t\t\tacceptedAnswer: {\n\t\t\t\t'@type': 'Answer',\n\t\t\t\ttext: question.acceptedAnswer.text,\n\t\t\t},\n\t\t})),\n\t});\n\nconst formatWebSite = (ws: WebSite) =>\n\tJSON.stringify({\n\t\t'@context': 'https://schema.org',\n\t\t'@type': 'WebSite',\n\t\turl: ws.url,\n\t\tpotentialAction: ws.potentialAction.map((action) => ({\n\t\t\t'@type': 'SearchAction',\n\t\t\ttarget: {\n\t\t\t\t'@type': 'EntryPoint',\n\t\t\t\turlTemplate: action.target.urlTemplate,\n\t\t\t},\n\t\t\t'query-input': action['query-input'],\n\t\t})),\n\t});\n\n/**\n * Page metadata.\n */\nconst Meta = ({ title, description, faq, actions }: MetaProps) => {\n\tconst [cloak] = useGlobalCloakSettings();\n\n\treturn (\n\t\t<Helmet>\n\t\t\t<title>\n\t\t\t\t{cloak.title === '' ? title || 'Blurred X' : cloak.title}\n\t\t\t</title>\n\t\t\t{!OBFUSCATE && description && (\n\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t)}\n\t\t\t{!OBFUSCATE && faq && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatFAQ({\n\t\t\t\t\t\tmainEntity: faq,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t{!OBFUSCATE && actions && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{formatWebSite({\n\t\t\t\t\t\turl: new URL(\n\t\t\t\t\t\t\tgetHot('home').path,\n\t\t\t\t\t\t\tglobal.location.toString()\n\t\t\t\t\t\t).toString(),\n\t\t\t\t\t\tpotentialAction: actions,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t</Helmet>\n\t);\n};\n\nexport default Meta;\n","// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n} from './BareClient';\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport interface GenericClient {\n\tconnect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket>;\n\trequest(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse>;\n}\n\nexport default class Client {\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n","const validChars =\n\t\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\nconst reserveChar = '%';\n\nexport function validProtocol(protocol: string): boolean {\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (!validChars.includes(char)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function encodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (validChars.includes(char) && char !== reserveChar) {\n\t\t\tresult += char;\n\t\t} else {\n\t\t\tconst code = char.charCodeAt(0);\n\t\t\tresult += reserveChar + code.toString(16).padStart(2, '0');\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function decodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (char === reserveChar) {\n\t\t\tconst code = parseInt(protocol.slice(i + 1, i + 3), 16);\n\t\t\tconst decoded = String.fromCharCode(code);\n\n\t\t\tresult += decoded;\n\t\t\ti += 2;\n\t\t} else {\n\t\t\tresult += char;\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\treturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\treturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = '';\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\treturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\treturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\treturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = '0123456789abcdef';\n\tlet output = '';\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\treturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\treturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\treturn rawHMACMD5(key, string);\n}\n","import type { GenericClient } from './Client';\nimport { statusRedirect } from './Client';\nimport ClientV1 from './V1';\nimport ClientV2 from './V2';\nimport { validProtocol } from './encodeProtocol';\n\n// Implements the protocol for requesting bare data from a server\n// See ../Server/Send.mjs\n\nexport * from './Client';\n\nconst clientCtors: [string, { new (server: URL): GenericClient }][] = [\n\t['v2', ClientV2],\n\t['v1', ClientV1],\n];\n\nexport type BareMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'UPDATE'\n\t| string;\n\nexport type BareCache =\n\t| 'default'\n\t| 'no-store'\n\t| 'reload'\n\t| 'no-cache'\n\t| 'force-cache'\n\t| 'only-if-cached'\n\t| string;\n\nexport interface XBare {\n\tstatus?: number;\n\tstatusText?: string;\n\theaders?: Headers;\n\trawHeaders?: BareHeaders;\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport type urlLike = URL | string;\n\nexport const maxRedirects = 20;\n\nexport type BareHeaders = { [key: string]: string | string[] };\n\n/**\n * WebSocket with an additional property.\n */\nexport type BareWebSocket = WebSocket & { meta: Promise<XBare> };\n\n/**\n * A Response with additional properties.\n */\nexport type BareResponse = Response & {\n\trawResponse: Response;\n\trawHeaders: BareHeaders;\n};\n\n/**\n * A BareResponse with additional properties.\n */\nexport type BareResponseFetch = BareResponse & { finalURL: string };\nexport type BareBodyInit =\n\t| Blob\n\t| BufferSource\n\t| FormData\n\t| URLSearchParams\n\t| ReadableStream\n\t| undefined\n\t| null;\n\nexport type BareFetchInit = {\n\tmethod?: BareMethod;\n\theaders?: Headers | BareHeaders;\n\tbody?: BareBodyInit;\n\tcache?: BareCache;\n\tredirect?: 'follow' | 'manual' | 'error' | string;\n\tsignal?: AbortSignal;\n};\n\nexport type BareMaintainer = {\n\temail?: string;\n\twebsite?: string;\n};\n\nexport type BareProject = {\n\tname?: string;\n\tdescription?: string;\n\temail?: string;\n\twebsite?: string;\n\trepository?: string;\n\tversion?: string;\n};\n\nexport type BareLanguage =\n\t| 'NodeJS'\n\t| 'ServiceWorker'\n\t| 'Deno'\n\t| 'Java'\n\t| 'PHP'\n\t| 'Rust'\n\t| 'C'\n\t| 'C++'\n\t| 'C#'\n\t| 'Ruby'\n\t| 'Go'\n\t| 'Crystal'\n\t| 'Shell'\n\t| string;\n\nexport type BareManifest = {\n\tmaintainer?: BareMaintainer;\n\tproject?: BareProject;\n\tversions: string[];\n\tlanguage: BareLanguage;\n\tmemoryUsage?: number;\n};\n\nasync function fetchManifest(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareManifest> {\n\tconst outgoing = await fetch(server, { signal });\n\n\tif (!outgoing.ok) {\n\t\tthrow new Error(\n\t\t\t`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`\n\t\t);\n\t}\n\n\treturn await outgoing.json();\n}\n\nfunction resolvePort(url: URL) {\n\tif (url.port) return Number(url.port);\n\n\tswitch (url.protocol) {\n\t\tcase 'ws:':\n\t\tcase 'http:':\n\t\t\treturn 80;\n\t\tcase 'wss:':\n\t\tcase 'https:':\n\t\t\treturn 443;\n\t\tdefault:\n\t\t\t// maybe blob\n\t\t\treturn 0;\n\t}\n}\n\nexport default class BareClient {\n\t/**\n\t * @depricated Use .manifest instead.\n\t */\n\tget data(): BareClient['manfiest'] {\n\t\treturn this.manfiest;\n\t}\n\tmanfiest?: BareManifest;\n\tprivate client?: GenericClient;\n\tprivate server: URL;\n\tprivate working?: Promise<void>;\n\tprivate onDemand: boolean;\n\tprivate onDemandSignal?: AbortSignal;\n\t/**\n\t * Lazily create a BareClient. Calls to fetch and connect will request the manifest once on-demand.\n\t * @param server A full URL to the bare server.\n\t * @param signal An abort signal for fetching the manifest on demand.\n\t */\n\tconstructor(server: string | URL, signal?: AbortSignal);\n\t/**\n\t * Immediately create a BareClient.\n\t * @param server A full URL to the bare server.\n\t * @param manfiest A Bare server manifest.\n\t */\n\tconstructor(server: string | URL, manfiest?: BareManifest);\n\tconstructor(server: string | URL, _?: BareManifest | AbortSignal) {\n\t\tthis.server = new URL(server);\n\n\t\tif (!_ || _ instanceof AbortSignal) {\n\t\t\tthis.onDemand = true;\n\t\t\tthis.onDemandSignal = _;\n\t\t} else {\n\t\t\tthis.onDemand = false;\n\t\t\tthis.manfiest = _;\n\t\t\tthis.getClient();\n\t\t}\n\t}\n\tprivate demand() {\n\t\tif (!this.onDemand) return;\n\n\t\tif (!this.working)\n\t\t\tthis.working = fetchManifest(this.server, this.onDemandSignal).then(\n\t\t\t\t(manfiest) => {\n\t\t\t\t\tthis.manfiest = manfiest;\n\t\t\t\t\tthis.getClient();\n\t\t\t\t}\n\t\t\t);\n\n\t\treturn this.working;\n\t}\n\tprivate getClient() {\n\t\t// newest-oldest\n\t\tfor (const [version, ctor] of clientCtors) {\n\t\t\tif (this.data!.versions.includes(version)) {\n\t\t\t\tthis.client = new ctor(this.server);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Unable to find compatible client version.`);\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tawait this.demand();\n\n\t\treturn await this.client!.request(\n\t\t\tmethod,\n\t\t\trequestHeaders,\n\t\t\tbody,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tport,\n\t\t\tpath,\n\t\t\tcache,\n\t\t\tsignal\n\t\t);\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tawait this.demand();\n\n\t\treturn this.client!.connect(requestHeaders, protocol, host, port, path);\n\t}\n\t/**\n\t *\n\t * @param url\n\t * @param headers\n\t * @param protocols\n\t * @returns\n\t */\n\tcreateWebSocket(\n\t\turl: urlLike,\n\t\theaders: BareHeaders | Headers = {},\n\t\tprotocols: string | string[] = []\n\t): Promise<BareWebSocket> {\n\t\tconst requestHeaders: BareHeaders =\n\t\t\theaders instanceof Headers ? Object.fromEntries(headers) : headers;\n\n\t\turl = new URL(url);\n\n\t\t// user is expected to specify user-agent and origin\n\t\t// both are in spec\n\n\t\trequestHeaders['Host'] = url.host;\n\t\t// requestHeaders['Origin'] = origin;\n\t\trequestHeaders['Pragma'] = 'no-cache';\n\t\trequestHeaders['Cache-Control'] = 'no-cache';\n\t\trequestHeaders['Upgrade'] = 'websocket';\n\t\t// requestHeaders['User-Agent'] = navigator.userAgent;\n\t\trequestHeaders['Connection'] = 'Upgrade';\n\n\t\tif (typeof protocols === 'string') {\n\t\t\tprotocols = [protocols];\n\t\t}\n\n\t\tfor (const proto of protocols) {\n\t\t\tif (!validProtocol(proto)) {\n\t\t\t\tthrow new DOMException(\n\t\t\t\t\t`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (protocols.length)\n\t\t\trequestHeaders['Sec-Websocket-Protocol'] = protocols.join(', ');\n\n\t\treturn this.connect(\n\t\t\trequestHeaders,\n\t\t\turl.protocol,\n\t\t\turl.hostname,\n\t\t\tresolvePort(url),\n\t\t\turl.pathname + url.search\n\t\t);\n\t}\n\tasync fetch(\n\t\turl: urlLike | Request,\n\t\tinit: BareFetchInit = {}\n\t): Promise<BareResponseFetch> {\n\t\tif (url instanceof Request) {\n\t\t\t// behave similar to the browser when fetch is called with (Request, Init)\n\t\t\tif (init) {\n\t\t\t\turl = new URL(url.url);\n\t\t\t} else {\n\t\t\t\tinit = url;\n\t\t\t\turl = new URL(url.url);\n\t\t\t}\n\t\t} else {\n\t\t\turl = new URL(url);\n\t\t}\n\n\t\tlet method: BareMethod;\n\n\t\tif (typeof init.method === 'string') {\n\t\t\tmethod = init.method;\n\t\t} else {\n\t\t\tmethod = 'GET';\n\t\t}\n\n\t\tlet body: BareBodyInit;\n\n\t\tif (init.body !== undefined && init.body !== null) {\n\t\t\tbody = init.body;\n\t\t}\n\n\t\tlet headers: BareHeaders;\n\n\t\tif (typeof init.headers === 'object' && init.headers !== null) {\n\t\t\tif (init.headers instanceof Headers) {\n\t\t\t\theaders = Object.fromEntries(init.headers);\n\t\t\t} else {\n\t\t\t\theaders = init.headers;\n\t\t\t}\n\t\t} else {\n\t\t\theaders = {};\n\t\t}\n\n\t\tlet cache: BareCache;\n\n\t\tif (typeof init.cache === 'string') {\n\t\t\tcache = init.cache;\n\t\t} else {\n\t\t\tcache = 'default';\n\t\t}\n\n\t\tlet signal: AbortSignal | undefined;\n\n\t\tif (init.signal instanceof AbortSignal) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\tfor (let i = 0; ; i++) {\n\t\t\tif ('host' in headers) headers.host = url.host;\n\t\t\telse headers.Host = url.host;\n\n\t\t\tconst response: BareResponse & Partial<BareResponseFetch> =\n\t\t\t\tawait this.request(\n\t\t\t\t\tmethod,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t\turl.protocol,\n\t\t\t\t\turl.hostname,\n\t\t\t\t\tresolvePort(url),\n\t\t\t\t\turl.pathname + url.search,\n\t\t\t\t\tcache,\n\t\t\t\t\tsignal\n\t\t\t\t);\n\n\t\t\tresponse.finalURL = url.toString();\n\n\t\t\tif (statusRedirect.includes(response.status)) {\n\t\t\t\tswitch (init.redirect) {\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\tif (maxRedirects > i && response.headers.has('location')) {\n\t\t\t\t\t\t\turl = new URL(response.headers.get('location')!, url);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\n * Facilitates fetching the Bare server and constructing a BareClient.\n * @param server Bare server\n * @param signal Abort signal when fetching the manifest\n */\nexport async function createBareClient(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareClient> {\n\tconst manfiest = await fetchManifest(server, signal);\n\n\treturn new BareClient(server, manfiest);\n}\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient';\nimport type { GenericClient } from './Client';\nimport Client, { BareError, statusEmpty } from './Client';\nimport md5 from './md5';\nimport { joinHeaders, splitHeaders } from './splitHeaderUtil';\n\nexport default class ClientV2 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(2, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('./ws-new-meta', this.base);\n\t\tthis.getMeta = new URL(`./ws-meta`, this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst request = new Request(this.newMeta, {\n\t\t\theaders: this.createBareHeaders(\n\t\t\t\tprotocol,\n\t\t\t\thost,\n\t\t\t\tpath,\n\t\t\t\tport,\n\t\t\t\trequestHeaders\n\t\t\t),\n\t\t});\n\n\t\tconst assignMeta = await fetch(request);\n\n\t\tif (!assignMeta.ok) {\n\t\t\tthrow new BareError(assignMeta.status, await assignMeta.json());\n\t\t}\n\n\t\tconst id = await assignMeta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\tid,\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tresolve(await this.readBareResponse(outgoing));\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`${protocol}${host}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (cache !== 'only-if-cached') {\n\t\t\toptions.cache = <RequestCache>cache;\n\t\t}\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\toptions.headers = this.createBareHeaders(\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders\n\t\t);\n\n\t\tconst request = new Request(\n\t\t\tthis.http + '?cache=' + md5(`${protocol}${host}${port}${path}`),\n\t\t\toptions\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status!) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status!,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers!,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response): Promise<XBare> {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: XBare = {};\n\n\t\tif (responseHeaders.has('x-bare-status')) {\n\t\t\tresult.status = parseInt(responseHeaders.get('x-bare-status')!);\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-status-text')) {\n\t\t\tresult.statusText = responseHeaders.get('x-bare-status-text')!;\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-headers')) {\n\t\t\tresult.rawHeaders = JSON.parse(responseHeaders.get('x-bare-headers')!);\n\t\t\tresult.headers = new Headers(<HeadersInit>result.rawHeaders);\n\t\t}\n\n\t\treturn result;\n\t}\n\tcreateBareHeaders(\n\t\tprotocol: BareWSProtocol | BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: number | string,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set('x-bare-protocol', protocol);\n\t\theaders.set('x-bare-host', host);\n\t\theaders.set('x-bare-path', path);\n\t\theaders.set('x-bare-port', port.toString());\n\t\theaders.set('x-bare-headers', JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append('x-bare-forward-headers', header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append('x-bare-pass-headers', header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append('x-bare-pass-status', status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n","import { BareError } from './Client';\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has('x-bare-headers')) {\n\t\tconst value = headers.get('x-bare-headers')!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete('x-bare-headers');\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = 'x-bare-headers';\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join: string[] = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(';')) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: 'INVALID_BARE_HEADER',\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: `Value didn't begin with semi-colon.`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(''));\n\t}\n\n\treturn output;\n}\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient.js';\nimport type { GenericClient } from './Client.js';\nimport Client, { BareError, statusEmpty } from './Client.js';\nimport { encodeProtocol } from './encodeProtocol.js';\n\nexport default class ClientV1 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(1, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('ws-new-meta', this.base);\n\t\tthis.getMeta = new URL('ws-meta', this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst assignMeta = await fetch(this.newMeta, { method: 'GET' });\n\n\t\tif (!assignMeta.ok) {\n\t\t\tthrow new BareError(assignMeta.status, await assignMeta.json());\n\t\t}\n\n\t\tconst id = await assignMeta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\t'bare',\n\t\t\tencodeProtocol(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tremote: {\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\thost,\n\t\t\t\t\t\tport,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t},\n\t\t\t\t\theaders: requestHeaders,\n\t\t\t\t\tforward_headers: [\n\t\t\t\t\t\t'accept-encoding',\n\t\t\t\t\t\t'accept-language',\n\t\t\t\t\t\t'sec-websocket-extensions',\n\t\t\t\t\t\t'sec-websocket-key',\n\t\t\t\t\t\t'sec-websocket-version',\n\t\t\t\t\t],\n\t\t\t\t\tid,\n\t\t\t\t})\n\t\t\t),\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tif (!outgoing.ok) {\n\t\t\t\t\treject(new BareError(outgoing.status, await outgoing.json()));\n\t\t\t\t}\n\n\t\t\t\tresolve(await outgoing.json());\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`${protocol}${host}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst forwardHeaders = ['accept-encoding', 'accept-language'];\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\t// bare can be an absolute path containing no origin, it becomes relative to the script\n\t\tconst request = new Request(this.http, options);\n\n\t\tthis.writeBareRequest(\n\t\t\trequest,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders,\n\t\t\tforwardHeaders\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst requiredHeaders = [\n\t\t\t'x-bare-status',\n\t\t\t'x-bare-status-text',\n\t\t\t'x-bare-headers',\n\t\t];\n\n\t\tfor (const header of requiredHeaders) {\n\t\t\tif (!response.headers.has(header)) {\n\t\t\t\tthrow new BareError(500, {\n\t\t\t\t\tcode: 'IMPL_MISSING_BARE_HEADER',\n\t\t\t\t\tid: `response.headers.${header}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst status = parseInt(response.headers.get('x-bare-status')!);\n\t\tconst statusText = response.headers.get('x-bare-status-text')!;\n\t\tconst rawHeaders = JSON.parse(response.headers.get('x-bare-headers')!);\n\t\tconst headers = new Headers(rawHeaders);\n\n\t\treturn {\n\t\t\tstatus,\n\t\t\tstatusText,\n\t\t\trawHeaders,\n\t\t\theaders,\n\t\t};\n\t}\n\tprivate writeBareRequest(\n\t\trequest: Request,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: string | number,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[]\n\t) {\n\t\trequest.headers.set('x-bare-protocol', protocol);\n\t\trequest.headers.set('x-bare-host', host);\n\t\trequest.headers.set('x-bare-path', path);\n\t\trequest.headers.set('x-bare-port', port.toString());\n\t\trequest.headers.set('x-bare-headers', JSON.stringify(bareHeaders));\n\t\trequest.headers.set(\n\t\t\t'x-bare-forward-headers',\n\t\t\tJSON.stringify(forwardHeaders)\n\t\t);\n\t}\n}\n"],"names":["formatFAQ","JSON","stringify","mainEntity","faq","map","name","question","acceptedAnswer","text","formatWebSite","url","ws","potentialAction","target","urlTemplate","action","Meta","title","description","actions","cloak","useGlobalCloakSettings","Helmet","OBFUSCATE","meta","content","script","type","URL","getHot","path","global","location","toString","fetch","globalThis","WebSocket","Request","Response","statusEmpty","statusRedirect","BareError","Error","constructor","status","body","message","code","Client","version","server","base","validChars","safeAdd","x","y","lsw","md5cmn","q","a","b","s","t","num","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","i","length","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","outputLen","length8","charCodeAt","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","rawHMACMD5","k","rstrHMACMD5","key","data","bkey","ipad","opad","hash","concat","clientCtors","requestHeaders","protocol","host","port","request","newMeta","headers","createBareHeaders","assignMeta","ok","json","id","socket","Promise","resolve","reject","addEventListener","outgoing","getMeta","method","readBareResponse","cache","signal","readResponse","string","raw","startsWith","response","result","rawHeaders","Object","fromEntries","rawResponse","bareHeaders","Headers","header","value","options","credentials","undefined","http","includes","statusText","responseHeaders","joinHeaders","prefix","has","join","parseInt","slice","delete","set","get","parse","forwardHeaders","passHeaders","passStatus","append","splitHeaders","split","part","encodeProtocol","char","reserveChar","padStart","remote","forward_headers","writeBareRequest","fetchManifest","resolvePort","Number","BareClient","manfiest","demand","onDemand","working","onDemandSignal","then","getClient","ctor","versions","client","connect","createWebSocket","protocols","proto","validProtocol","DOMException","hostname","pathname","search","init","AbortSignal","Host","finalURL","redirect","maxRedirects","_"],"sourceRoot":""}